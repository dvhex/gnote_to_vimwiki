#!/usr/bin/perl -w
$linewidth = 80;
$globaltitle = "Notebooks";
foreach (@ARGV)
{
    $_ = read_note($_);
    $title = get_title($_);
    $content = get_content($_);
    $tag = get_tag($_);

    $content = gnote_to_vimwiki($content);

    create_wiki_note($tag, $title, $content);

    push @{$toc{$tag}}, $title;
}
create_toc_files(\%toc);

sub create_toc_files
{
    # запись ссылок в виде индексных файлов
    my %toc = %{$_[0]};
    open TOC, ">notes/index.wiki";
    binmode(TOC, "utf8");
    print TOC "=".$globaltitle."=\n\n";
    foreach (keys %toc)
    {
        print TOC "* [[$_/index|$_]]\n";
        open INDEX, ">notes/$_/index.wiki" or die;
        binmode(INDEX, "utf8");
        print INDEX "=$_=\n\n";
        foreach ( @{$toc{$_}})
        {
            print INDEX "* [[$_]]\n";
        }
        close INDEX;
    }
    close TOC;
}

sub read_note
{
    my $fname = shift;
    open F, $fname or die;
    binmode(F, "utf8");
    my @note = <F>;
    close F;

    join('', @note);
}

sub get_title
{
    $_ = shift;
    my ($title) = m#<title>(.+)</title>#;
    $title =~ s#/#_#g;
    return $title;
}

sub get_content
{
    $_ = shift;
    my ($content) = m#<note-content.*?>((.|\s)+)</note-content>#;
    return $content;
}

sub get_tag
{
    $_ = shift;
    my ($tag) = m#<tag>.*:(.+)</tag>#;
    $tag = "default" if !$tag;
    return $tag;
}

sub gnote_to_vimwiki
{
    $_ = shift;

    # ссылки (локальные и внешние)
    s#<link:internal>(.*?)</link:internal>#[[$1]]#g;
    s#<link:url>(.*?)</link:url>#$1#g;

    # формат текста
    s#<italic>((.|\s)+?)</italic>#_$1_#g;
    s#<bold>((.|\s)+?)</bold>#*$1*#g;
    s#<monospace>(.+?)</monospace>#`$1`#g;
    s#<strikethrough>((.|\s)+?)</strikethrough>#~~$1~~#g;

    # знаки
    s#&gt;#>#g;
    s#&lt;#<#g;
    s#&quot;#"#g;
    s#&amp;#&#g;

    # размер шрифта конвертируется в код html, т.к. в vimwiki такой функции нету
    s#<size:(.+?)>((.|\s)+?)</size:\1>#<p style="text-size:$1">$2</p>#g;

    # отметить первую строку, как заголовок
    s#^(.+?)\n#=$1=\n#;

    # поиск блоков кода и вставка двойных переносов
    $_ = process_code_blocks($_);

    return $_;
}

sub process_code_blocks
{
    $_ = shift;
    my @lines = split("\n", $_);
    my $in_cb = 0;
    foreach (@lines)
    {
        unless ($in_cb)
        {
            if (/^<monospace>/)
            {
                $in_cb = 1;
                s/<monospace>/{{{\n/;
            }
            elsif ($_ ne "")
            {
                $_ = split_line($_) unless /^=.+=$/;
                $_ .= "\n\n";
            }
        }
        else
        {
            if (m#</monospace>#)
            {
                $in_cb = 0;
                s#</monospace>#\n}}}\n\n#;
            }
            else
            {
                $_ .= "\n";
            }
        }
    }
    $_ = join("", @lines);
    return $_;
}

sub split_line
{
    my $line = shift;
    if (length($line) > $linewidth)
    {
        my @words = split(" ", $line);
        $line = "";
        my $curline = "";
        foreach (@words)
        {
            unless ($curline)
            {
                $curline = $_;
                next;
            }
            if (length($curline." ".$_) < 80)
            {
                $curline .= " ".$_;
            }
            else
            {
                $line .= $curline."\n";
                $curline = "";
                redo;
            }
        }
        if ($curline)
        {
            $line .= $curline;
        }
    }
    return $line;
}

sub create_wiki_note
{
    my ($tag, $title, $content) = @_;
    system("mkdir -p \"notes/$tag\"") && die;
    open F, ">notes/$tag/$title.wiki" or die;
    binmode(F, "utf8");
    print F $content;
    close F;
}
